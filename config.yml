j2_template_fields:
  - boot_command
  - cloud-init
  - pass
  - preseed
  - scripts_after
  - scripts_before
  - scripts
  - user
defaults:
  cpus: 1
  disk_size: 50000
  domain: localhost
  files_folder: files
  headless: false
  hostname: vm
  build_memory: 1024
  packer_j2_name: child.json.j2
  pass: '{$ args.distro $}'
  scripts: []
  scripts_after:
    - '{$ args.distro $}/cleanup'
    - minimize
  scripts_before: []
  user: '{$ args.distro $}'
  vagrant: false
vagrant:
  user: vagrant
  vagrant: true
  pass: vagrant
distros:
  ubuntu:
    defaults:
      memory: 512
      guest_os_type: Ubuntu_64
    '18.04':
      boot_command:
        - <esc><wait>
        - <esc><wait>
        - <enter><wait>
        - /install/vmlinuz<wait>
        - ' auto<wait>'
        - ' console-setup/ask_detect=false<wait>'
        - ' console-setup/layoutcode=us<wait>'
        - ' console-setup/modelcode=pc105<wait>'
        - ' debconf/frontend=noninteractive<wait>'
        - ' debian-installer=en_US.UTF-8<wait>'
        - ' fb=false<wait>'
        - ' grub-installer/bootdev=/dev/sda<wait>'
        - ' initrd=/install/initrd.gz<wait>'
        - ' kbd-chooser/method=us<wait>'
        - ' keyboard-configuration/layout=USA<wait>'
        - ' keyboard-configuration/variant=USA<wait>'
        - ' locale=en_US.UTF-8<wait>'
        - ' netcfg/get_domain={$ domain $}<wait>'
        - ' netcfg/get_hostname={$ hostname $}<wait>'
        - ' noapic<wait>'
        - ' preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg<wait>'
        - ' -- <wait>'
        - <enter><wait>
      iso_checksum: 8c5fc24894394035402f66f3824beb7234b757dd2b5531379cb310cedfdf0996
      iso_url: 'http://cdimage.ubuntu.com/ubuntu/releases/18.04.5/release/ubuntu-18.04.5-server-amd64.iso'
      preseed: |-
        choose-mirror-bin mirror/http/proxy string
        d-i base-installer/kernel/override-image string linux-server
        d-i clock-setup/utc boolean true
        d-i clock-setup/utc-auto boolean true
        d-i finish-install/reboot_in_progress note
        d-i grub-installer/only_debian boolean true
        d-i grub-installer/with_other_os boolean true
        d-i mirror/country string manual
        d-i mirror/http/directory string /ubuntu
        d-i mirror/http/hostname string archive.ubuntu.com
        d-i mirror/http/proxy string
        d-i partman-auto/choose_recipe select atomic
        d-i partman-auto/disk string /dev/sda
        d-i partman-auto/method string regular
        d-i partman/choose_partition select finish
        d-i partman/confirm boolean true
        d-i partman/confirm_nooverwrite boolean true
        d-i partman/confirm_write_new_label boolean true
        d-i passwd/user-fullname string {$ user $}
        d-i passwd/user-password password {$ pass $}
        d-i passwd/user-password-again password {$ pass $}
        d-i passwd/user-uid string 1000
        d-i passwd/username string {$ user $}
        d-i pkgsel/include string openssh-server build-essential dkms linux-headers-$(uname -r)
        d-i pkgsel/install-language-support boolean false
        d-i pkgsel/update-policy select none
        d-i pkgsel/upgrade select full-upgrade
        d-i time/zone string UTC
        d-i user-setup/allow-password-weak boolean true
        d-i user-setup/encrypt-home boolean false
        popularity-contest popularity-contest/participate boolean false
        tasksel tasksel/first multiselect standard, server
    '20.04':
      boot_command:
        - '<f6on><wait10><f6off><enter><f6><esc>'
        - 'autoinstall ds=nocloud-net;s=http://{{ .HTTPIP }}:{{ .HTTPPort }}/'
        - '<enter>'
      boot_wait: -1s
      # The `#cloud-config` comment under `user-data` is required
      cloud-init:
        meta-data: null
        user-data:
          #cloud-config
          autoinstall:
            version: 1
            identity:
              hostname: '{$ hostname $}'
              password: '{$ pass | crypt $}'
              username: '{$ user $}'
            ssh:
              install-server: 'yes'
            reporting:
              hook:
                type: webhook
                endpoint: '{$ services.webhook_server_url $}'
                level: DEBUG
      iso_checksum: 443511f6bf12402c12503733059269a2e10dec602916c0a75263e5d990f6bb93
      iso_url: 'https://releases.ubuntu.com/20.04/ubuntu-20.04.1-live-server-amd64.iso'
      scripts_before:
        - nocloudinit
        - nowaitnetwork
      # The SSH server is up (but not accessible for the configured user)
      # before cloud-init finishes.
      ssh_handshake_attempts: 1000
  debian:
    defaults:
      memory: 396
      guest_os_type: Debian_64
    '10.6.0':
      boot_command:
        - '<esc><wait>'
        - 'install<wait>'
        - ' auto<wait>'
        - ' console-keymaps-at/keymap=us<wait>'
        - ' console-setup/ask_detect=false<wait>'
        - ' debconf/frontend=noninteractive<wait>'
        - ' debian-installer=en_US.UTF-8<wait>'
        - ' fb=false<wait>'
        - ' grub-installer/bootdev=/dev/sda<wait>'
        - ' kbd-chooser/method=us<wait>'
        - ' keyboard-configuration/xkb-keymap=us<wait>'
        - ' locale=en_US.UTF-8<wait>'
        - ' netcfg/get_domain={$ domain $}<wait>'
        - ' netcfg/get_hostname={$ hostname $}<wait>'
        - ' preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg<wait>'
        - ' -- <wait>'
        - <enter><wait>
      iso_checksum: 2af8f43d4a7ab852151a7f630ba596572213e17d3579400b5648eba4cc974ed0
      iso_url: 'https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-10.6.0-amd64-netinst.iso'
      preseed: |-
        choose-mirror-bin mirror/http/proxy string
        d-i apt-setup/cdrom/set-failed boolean false
        d-i apt-setup/cdrom/set-first boolean false
        d-i apt-setup/cdrom/set-next boolean false
        d-i base-installer/kernel/override-image string linux-server
        d-i clock-setup/utc boolean true
        d-i clock-setup/utc-auto boolean true
        d-i finish-install/reboot_in_progress note
        d-i grub-installer/only_debian boolean true
        d-i grub-installer/with_other_os boolean true
        d-i mirror/country string manual
        d-i mirror/http/directory string /debian
        d-i mirror/http/hostname string httpredir.debian.org
        d-i mirror/http/proxy string
        d-i partman-auto/choose_recipe select atomic
        d-i partman-auto/disk string /dev/sda
        d-i partman-auto/method string regular
        d-i partman/choose_partition select finish
        d-i partman/confirm boolean true
        d-i partman/confirm_nooverwrite boolean true
        d-i partman/confirm_write_new_label boolean true
        d-i passwd/root-login boolean false
        d-i passwd/root-password password {$ pass $}
        d-i passwd/root-password-again password {$ pass $}
        d-i passwd/user-fullname string {$ user $}
        d-i passwd/user-password password {$ pass $}
        d-i passwd/user-password-again password {$ pass $}
        d-i passwd/user-uid string 1000
        d-i passwd/username string {$ user $}
        d-i pkgsel/include string sudo curl openssh-server build-essential dkms linux-headers-$(uname -r)
        d-i pkgsel/install-language-support boolean false
        d-i pkgsel/update-policy select none
        d-i pkgsel/upgrade select full-upgrade
        d-i time/zone string UTC
        d-i user-setup/allow-password-weak boolean true
        d-i user-setup/encrypt-home boolean false
        popularity-contest popularity-contest/participate boolean false
        tasksel tasksel/first multiselect standard, ssh-server
variants:
  root:
    packer_j2_name: root.json.j2
    scripts_after: []
    scripts_before:
      - '{$ args.distro $}/update'
      - virtualbox
      - common
  base: {}
  db:
    scripts:
      - postgres
  desktop:
    clipboardmode: bidirectional
    draganddrop: bidirectional
    graphicscontroller: vboxvga
    keep_x: true
    memory: 2048
    scripts:
      - desktop
    vram: 128
  mininet:
    scripts:
      - mininet
  nossh:
    scripts:
      - nossh
  www:
    scripts:
      - www
